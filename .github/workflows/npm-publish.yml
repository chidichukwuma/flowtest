# # This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# # For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

# name: Review package
# on:
#   release:
#     types: [ "published" ]
#   push:
#       branches: [ "dev" ]
#   pull_request:
#     types:
#       - opened
   
# jobs:
#   test:
#     name: 'Node.js v${{ matrix.node }}'
#     if: github.ref == 'refs/heads/dev'
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: technote-space/get-diff-action@v6
#         with:
#           PATTERNS: |
#             +(documentation|__tests__)/**/*.ts
#             !src/exclude.ts
#           FILES: |
#             yarn.lock
#             .eslintrc
    
#       - uses: actions/setup-node@v1
#         with:
#           node-version: '${{ matrix.node }}'
#       - uses: actions/checkout@v2
#       - name: 'Cache node_modules'
#         uses: actions/cache@v2
      
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-v${{ matrix.node }}-
#       - name: Install Dependencies
#         run: |
#           npm audit fix
#           npm install

#       - name: code coverage
#         env: 
#           PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
#           SECRET_KEY: ${{ secrets.SECRET_KEY }}
#         run : npm run coverage

#     strategy:
#       matrix:
#         node:
#           - 14

  
name: Review package
on:
  release:
    types: [ "published" ]
  push:
      branches: [ "dev" ]
  pull_request:
    types:
      - opened
   
jobs:
  test:
    name: 'Node.js v${{ matrix.node }}'
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            +(documentation)/*.md
            *.md
          # FILES: |
          #   README.md
      # - run: echo ${{ env.GIT_DIFF }}
      - name: Check code style
        # Check only if there are differences in the source code
        run: npm lint
        if: env.GIT_DIFF


       